version: '3'

networks:
  nginx-doctrine:

services:

  # nginx
  nginx-service-doctrine:
    image: nginx:stable-alpine
    container_name: nginx-container-doctrine
    ports:
      - "7002:80"
    volumes:
      - ./app:/var/www/project
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php74-service-doctrine
      - mysql8-service-doctrine
    networks:
      - nginx-doctrine

  # php
  php74-service-doctrine:
    build:
      context: .
      dockerfile: ./php/Dockerfile
    container_name: php74-container-doctrine
    ports:
      - "9602:9000"
    volumes:
      - ./app:/var/www/project
    networks:
      - nginx-doctrine
  # Database
  db_data:
    image: mysql:5.7
    volumes:
      - ./mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    networks:
      - nginx-doctrine
  # phpmyadmin
  phpmyadmin:
    depends_on:
      -  mysql8-service-doctrine
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8073:80'
    environment:
      PMA_HOST: mysql8-service-doctrine
      MYSQL_ROOT_PASSWORD: password
    networks:
      - nginx-doctrine
  # mysql
  mysql8-service-doctrine:
    image: mysql:8
    container_name: mysql8-container-doctrine
    ports:
      - "4308:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always # always restart unless stopped manually
    environment:
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
    networks:
      - nginx-doctrine